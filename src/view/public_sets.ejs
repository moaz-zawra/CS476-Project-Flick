<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Flick | Public Sets</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/js/color-scheme.js"></script>
  <script src="/js/categories.js"></script>
  <script src="/js/status-handler.js"></script>
  <script>
    tailwind.config = window.tailwindConfig;
  </script>
</head>

<body class="p-4 bg-bg-light dark:bg-bg-dark min-h-screen">

  <%- include('partials/header') %>
    <%- include('partials/status-message') %>

      <div class="flex justify-between items-center mt-4">
        <a href="/account">
          <div class="flex items-center">
            <div
              class="w-10 h-10 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center mr-4 font-mono text-xl text-accent-light dark:text-accent-dark font-bold hover:shadow-lg hover:bg-gray-200 dark:hover:bg-gray-500 transition-all duration-200">
              <%= user.username.charAt(0).toUpperCase() %>
            </div>
            <div class="font-mono text-2xl text-accent-light dark:text-accent-dark">
              <b>
                <%= user.username %>
              </b>
            </div>
          </div>
        </a>
      </div>

      <main>
        <div class="flex justify-between items-center mb-4 py-4">
          <div class="font-mono text-2xl text-accent-light dark:text-accent-dark font-bold">Public Flashcard Sets</div>
          <a href="/"
            class="border-2 rounded-xl px-4 py-2 bg-main-button-light dark:bg-main-button-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200">
            Back to Dashboard
          </a>
        </div>

        <div
          class="border-2 border-accent-light dark:border-accent-dark bg-surface-light dark:bg-surface-dark rounded-xl p-4 mb-6">
          <div class="flex flex-col md:flex-row items-start md:items-end gap-4">
            <div class="w-full md:w-1/3">
              <label for="nameFilter" class="text-text-light dark:text-text-dark font-bold block text-left mb-2">
                Search by Name
              </label>
              <input type="text" id="nameFilter" placeholder="Enter set name..."
                class="border-2 rounded-lg p-2 bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark w-full transition-colors duration-200">
            </div>
            <div class="w-full md:w-1/4">
              <label for="categoryFilter" class="text-text-light dark:text-text-dark font-bold block text-left mb-2">
                Category
              </label>
              <select id="categoryFilter"
                class="border-2 rounded-lg p-2 bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark w-full transition-colors duration-200">
                <option value="">All Categories</option>
              </select>
            </div>
            <div class="w-full md:w-1/4">
              <label for="subcategoryFilter" class="text-text-light dark:text-text-dark font-bold block text-left mb-2">
                Subcategory
              </label>
              <select id="subcategoryFilter"
                class="border-2 rounded-lg p-2 bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark w-full transition-colors duration-200">
                <option value="">All Subcategories</option>
              </select>
            </div>

            <div>
              <button id="applyFilters"
                class="border-2 rounded-xl px-8 py-2.5 bg-main-button-light dark:bg-main-button-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark hover:text-text-light dark:hover:text-text-dark transition-all duration-200 transform hover:scale-105">
                Apply Filters
              </button>
            </div>
          </div>
        </div>

        <div id="public-sets-container" class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <% if (typeof publicSets !=='undefined' && Array.isArray(publicSets) && publicSets.length> 0) { %>
            <% publicSets.forEach(function(set) { %>
              <div
                class="set-item border-2 border-accent-light dark:border-accent-dark bg-surface-light dark:bg-surface-dark rounded-lg p-4 hover:shadow-lg transition-shadow duration-200"
                data-name="<%= set.setName.toLowerCase() %>" data-category="<%= set.category %>"
                data-subcategory="<%= set.subCategory %>">
                <div class="h-full flex flex-col justify-between">
                  <div>
                    <h2 class="font-mono text-xl font-bold text-accent-light dark:text-accent-dark mb-2">
                      <%= set.setName %>
                    </h2>
                    <p class="text-text-light dark:text-text-dark text-base mb-4 line-clamp-3">
                      <%= set.description || "No description available" %>
                    </p>
                  </div>

                  <div class="flex flex-wrap gap-2 mb-4">
                    <span
                      class="px-2 py-1 rounded bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-100 text-sm">
                      Category: <%= categoryNames[set.category] || set.category || 'Unknown' %>
                    </span>
                    <% if (set.subCategory) { %>
                      <span
                        class="px-2 py-1 rounded bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 text-sm">
                        Subcategory: <%= set.subCategory %>
                      </span>
                      <% } %>
                  </div>


                  <div class="flex flex-col gap-2">

                    <div class="flex items-center gap-4">
                      <span class="text-text-light dark:text-text-dark">
                        Created by: <%= set.ownerID.username || set.ownerID.email || "Anonymous" %>
                      </span>
                      <span class="text-text-light dark:text-text-dark">
                        Views: <%= set.views %>
                      </span>
                    </div>

                    <div class="text-sm text-gray-500 dark:text-gray-400">
                      Posted on: <%= new Date(set.creation_date).toLocaleString("en-US", { weekday: 'short' ,
                        year: 'numeric' , month: 'short' , day: 'numeric' , hour: '2-digit' , minute: '2-digit' ,
                        second: '2-digit' }) %>
                    </div>


                    <div class="flex items-center gap-3">
                      <a href="/view_set?setID=<%= set.setID %>&set_type=public"
                        class="relative group flex items-center justify-center p-1 bg-transparent hover:opacity-80 transition-opacity">
                        <img src="view.svg" alt="View Icon"
                          style="width:24px !important; height:24px !important; flex-shrink:0 !important;"
                          class="invert dark:invert-0">
                        <span
                          class="absolute top-full left-1/2 -translate-x-1/2 mt-1 bg-black text-white text-xs font-semibold px-2 py-1 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-10">
                          View Set
                        </span>
                      </a>
                      <a href="/play_set?setID=<%= set.setID %>&set_type=public"
                        class="relative group flex items-center justify-center p-1 bg-transparent hover:opacity-80 transition-opacity">
                        <img src="play.svg" alt="Play Icon"
                          style="width:24px !important; height:24px !important; flex-shrink:0 !important;"
                          class="invert dark:invert-0">
                        <span
                          class="absolute top-full left-1/2 -translate-x-1/2 mt-1 bg-black text-white text-xs font-semibold px-2 py-1 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-10">
                          Play Set
                        </span>
                      </a>
                      <button onclick="reportPublicSet('<%= set.setID %>')"
                        class="relative group flex items-center justify-center p-1 bg-transparent hover:opacity-80 transition-opacity">
                        <img src="report.svg" alt="Report Icon"
                          style="width:24px !important; height:24px !important; flex-shrink:0 !important;"
                          class="invert dark:invert-0">
                        <span
                          class="absolute top-full left-1/2 -translate-x-1/2 mt-1 bg-black text-white text-xs font-semibold px-2 py-1 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-10">
                          Report Set
                        </span>
                      </button>
                    </div>
                  </div>

                </div>
              </div>
              <% }); %>
                <% } else { %>
                  <div
                    class="col-span-4 border-2 border-accent-light dark:border-accent-dark bg-surface-light dark:bg-surface-dark rounded-lg p-8 text-center">
                    <p class="font-mono text-lg text-accent-light dark:text-accent-dark">
                      No public sets available yet.
                    </p>
                  </div>
                  <% } %>
        </div>

        <div class="mt-6 flex justify-center">
          <div class="inline-flex rounded-md shadow-sm" role="group">

          </div>
        </div>
      </main>

      <div id="report-modal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
        <div class="bg-surface-light dark:bg-surface-dark p-6 rounded-lg shadow-lg w-2/3 md:w-1/2">
          <h2 class="text-xl font-bold mb-4 text-text-light dark:text-text-dark">Report Set</h2>
          <textarea id="reason-input"
            class="w-full p-2 border-2 border-accent-light dark:border-accent-dark rounded-md bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark"
            placeholder="Enter reason for reporting" rows="4"></textarea>
          <div class="flex justify-end mt-4 gap-2">
            <button id="cancel-report"
              class="border-2 rounded-xl px-4 py-2 bg-secondary-button-light dark:bg-secondary-button-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200">
              Cancel
            </button>
            <button id="confirm-report"
              class="border-2 rounded-xl px-4 py-2 bg-main-button-light dark:bg-main-button-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200">
              Report
            </button>
          </div>
        </div>
      </div>

      <script>
        window.categoryNames = <% - JSON.stringify(categoryNames) %>;
        window.subcategoriesData = <% - JSON.stringify(subcategories) %>;

        let reportingSetId = null;
        function reportPublicSet(setId) {
          reportingSetId = setId;
          document.getElementById('report-modal').classList.remove('hidden');
        }

        document.addEventListener('DOMContentLoaded', function () {
          const categoryFilter = document.getElementById('categoryFilter');
          const subcategoryFilter = document.getElementById('subcategoryFilter');
          const nameFilter = document.getElementById('nameFilter');
          const applyFiltersBtn = document.getElementById('applyFilters');
          const originalHTML = categoryFilter.innerHTML;

          populateCategoryDropdown(categoryFilter, window.categoryNames, false);
          if (!categoryFilter.querySelector('option[value=""]')) {
            const currentOptions = categoryFilter.innerHTML;
            categoryFilter.innerHTML = originalHTML + currentOptions;
          }
          categoryFilter.value = "";

          categoryFilter.addEventListener('change', function () {
            const hasSubcategories = populateSubcategoryDropdown(
              this.value,
              subcategoryFilter,
              window.subcategoriesData,
              true
            );
            subcategoryFilter.disabled = !hasSubcategories;
          });

          applyFiltersBtn.addEventListener('click', filterSets);
          nameFilter.addEventListener('input', filterSets);
          nameFilter.addEventListener('keyup', function (e) {
            if (e.key === 'Enter') {
              filterSets();
            }
          });

          const cancelReport = document.getElementById('cancel-report');
          const confirmReport = document.getElementById('confirm-report');
          cancelReport.addEventListener('click', function () {
            document.getElementById('report-modal').classList.add('hidden');
            document.getElementById('reason-input').value = '';
            reportingSetId = null;
          });
          confirmReport.addEventListener('click', function () {
            const reason = document.getElementById('reason-input').value;
            if (!reason.trim()) {
              alert('Please enter a reason for reporting');
              return;
            }
            if (reportingSetId) {
              const form = document.createElement('form');
              form.action = '/api/reportSet';
              form.method = 'post';
              form.style.display = 'none';

              const reasonInput = document.createElement('input');
              reasonInput.type = 'hidden';
              reasonInput.name = 'reason';
              reasonInput.value = reason;

              const setIdInput = document.createElement('input');
              setIdInput.type = 'hidden';
              setIdInput.name = 'setID';
              setIdInput.value = reportingSetId;

              form.appendChild(reasonInput);
              form.appendChild(setIdInput);
              document.body.appendChild(form);
              form.submit();
            }
            document.getElementById('report-modal').classList.add('hidden');
          });
        });

        function filterSets() {
          const nameFilterVal = document.getElementById('nameFilter').value.toLowerCase();
          const categoryVal = document.getElementById('categoryFilter').value;
          const subcategoryVal = document.getElementById('subcategoryFilter').value;
          const sets = document.querySelectorAll('#public-sets-container .set-item');

          sets.forEach(set => {
            const setName = set.getAttribute('data-name');
            const setCategory = set.getAttribute('data-category');
            const setSubcategory = set.getAttribute('data-subcategory');
            let showSet = true;

            if (nameFilterVal && !setName.includes(nameFilterVal)) {
              showSet = false;
            }
            if (showSet && categoryVal && categoryVal !== '' && setCategory !== categoryVal) {
              showSet = false;
            }
            if (showSet && subcategoryVal && subcategoryVal !== '' && setSubcategory !== subcategoryVal) {
              showSet = false;
            }
            set.style.display = showSet ? '' : 'none';
          });

          const visibleSets = document.querySelectorAll('#public-sets-container .set-item[style=""]');
          const noResultsMessage = document.getElementById('no-results-message');
          if (visibleSets.length === 0) {
            if (!noResultsMessage) {
              const message = document.createElement('div');
              message.id = 'no-results-message';
              message.className = 'border-2 border-accent-light dark:border-accent-dark bg-surface-light dark:bg-surface-dark rounded-lg p-8 text-center mt-4';
              message.innerHTML = '<p class="font-mono text-lg text-accent-light dark:text-accent-dark">No matching sets found.</p>';
              const container = document.getElementById('public-sets-container');
              container.appendChild(message);
            }
          } else if (noResultsMessage) {
            noResultsMessage.remove();
          }
        }
      </script>
</body>

</html>