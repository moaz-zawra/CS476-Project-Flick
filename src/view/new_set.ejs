<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Flick | New Set</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="/js/color-scheme.js"></script>
  <script src="/js/status-handler.js"></script>
  <script>
      tailwind.config = window.tailwindConfig;
  </script>
</head>
<body class="p-4 bg-bg-light dark:bg-bg-dark min-h-screen">
  <%- include('partials/header') %>
  <%- include('partials/status-message') %>

  <main class="flex flex-col md:flex-row items-center justify-center gap-8 mt-10 max-w-[1400px] mx-auto px-4">
    
    <!-- Guidelines Section -->
    <div id="guidelines" class="hidden bg-surface-light dark:bg-surface-dark rounded-xl px-12 py-6 shadow-lg w-full max-w-2xl lg:w-[800px] flex flex-col justify-between text-left min-h-[487px] lg:h-[487px]">
      <div class="border-b-2 border-accent-light dark:border-accent-dark pb-3 mb-5">
        <h2 class="text-4xl font-bold text-text-light dark:text-text-dark text-center">Community Guidelines</h2>
        <h2 class="text-4xl font-bold text-text-light dark:text-text-dark text-center">for Content Creation</h2>
      </div>
      <p class="text-text-light dark:text-text-dark text-lg mb-4">
        Help us maintain a positive and inclusive learning environment by following these guidelines when creating your flashcard sets.
      </p>
      <ul class="space-y-3 text-lg mb-4">
        <li class="flex items-center text-text-light dark:text-text-dark">
          <span class="text-green-500 font-bold mr-3">âœ”</span> Keep content respectful and inclusive for all learners
        </li>
        <li class="flex items-center text-text-light dark:text-text-dark">
          <span class="text-green-500 font-bold mr-3">âœ”</span> Share accurate and educational information
        </li>
        <li class="flex items-center text-text-light dark:text-text-dark">
          <span class="text-green-500 font-bold mr-3">âœ”</span> Avoid inappropriate or offensive material
        </li>
        <li class="flex items-center text-text-light dark:text-text-dark">
          <span class="text-green-500 font-bold mr-3">âœ”</span> Credit sources when using external content
        </li>
      </ul>
      <p class="text-text-light dark:text-text-dark italic text-lg text-center">
        Together, we create a better learning experience for everyone! ðŸŒŸ
      </p>
    </div>

    <!-- Form Section -->
    <div class="border-2 border-accent-light dark:border-accent-dark bg-surface-light dark:bg-surface-dark rounded-xl w-full max-w-md p-6 self-center text-center shadow-custom transition-all duration-300 hover:shadow-lg">
      <form action="/api/newSet" method="post" class="space-y-4">
        <!-- Set Name -->
        <div class="mb-4 text-left">
          <label for="setName" class="text-text-light dark:text-text-dark font-bold mb-2 block">Set Name</label>
          <input type="text" id="setName" name="setName" class="border-2 rounded-lg p-2 w-full bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark transition-colors duration-200" required>
        </div>

        <!-- Set Description -->
        <div class="mb-4 text-left">
          <label for="setDesc" class="text-text-light dark:text-text-dark font-bold mb-2 block">Set Description</label>
          <input type="text" id="setDesc" name="setDesc" class="border-2 rounded-lg p-2 w-full bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark transition-colors duration-200" required>
        </div>

        <!-- Category -->
        <div class="mb-4 text-left">
          <label for="category" class="text-text-light dark:text-text-dark font-bold mb-2 block">Category</label>
          <select id="category" name="category" class="border-2 rounded-lg p-2 w-full bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark transition-colors duration-200" required>
            <option value="" disabled selected>Select a category</option>
            <% Object.entries(categories).forEach(([key, value]) => { %>
              <% if (!isNaN(Number(key))) { %>
                <option value="<%= key %>"><%= categoryNames[key] %></option>
              <% } %>
            <% }); %>
          </select>
        </div>

        <!-- Subcategory (conditionally shown) -->
        <div id="subcategory-container" class="hidden mb-4 text-left">
          <label for="subcategory" class="text-text-light dark:text-text-dark font-bold mb-2 block">Subcategory</label>
          <select id="subcategory" name="subcategory" class="border-2 rounded-lg p-2 w-full bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark transition-colors duration-200">
            <option value="" disabled selected>Select a subcategory</option>
          </select>
        </div>

        <!-- Public Checkbox -->
        <div class="mb-4 flex items-center text-left">
          <input type="checkbox" id="public" name="publicSet" class="border-2 rounded-lg p-2 bg-surface-light dark:bg-surface-dark text-text-light dark:text-text-dark focus:border-accent-light dark:focus:border-accent-dark focus:outline-none border-accent-light dark:border-accent-dark transition-colors duration-200">
          <label for="public" class="text-text-light dark:text-text-dark font-bold ml-2">Public Set</label>
        </div>

        <!-- Buttons -->
        <button type="submit" class="border-2 rounded-xl px-8 py-3 bg-main-button-light dark:bg-accent-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200 transform hover:scale-105 w-full mb-4">Create Set</button>
        <button type="button" class="border-2 rounded-xl px-8 py-3 bg-secondary-button-light dark:bg-contrast-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200 transform hover:scale-105 w-full" onclick="window.location.href='/'">Go back to dashboard</button>
      </form>
    </div>
  </main>

  <!-- Scripts -->
  <script>
    // Toggle guidelines visibility when "Public Set" is checked
    const publicCheckbox = document.getElementById('public');
    const guidelinesDiv = document.getElementById('guidelines');
    publicCheckbox.addEventListener('change', function() {
      if (this.checked) {
        guidelinesDiv.classList.remove('hidden');
      } else {
        guidelinesDiv.classList.add('hidden');
      }
    });

    // Populate subcategories based on selected category
    document.addEventListener('DOMContentLoaded', function() {
      const categorySelect = document.getElementById('category');
      const subcategorySelect = document.getElementById('subcategory');
      const subcategoryContainer = document.getElementById('subcategory-container');
      const subcategoriesData = <%- JSON.stringify(subcategories) %>;

      categorySelect.addEventListener('change', function() {
        const selectedCategory = this.value;
        const subCategoryEnum = subcategoriesData[selectedCategory];

        // Clear previous options
        subcategorySelect.innerHTML = '';

        // Create and append default option
        const defaultOption = document.createElement('option');
        defaultOption.value = '';
        defaultOption.textContent = 'Select a subcategory';
        defaultOption.disabled = true;
        defaultOption.selected = true;
        subcategorySelect.appendChild(defaultOption);

        if (subCategoryEnum) {
          Object.entries(subCategoryEnum).forEach(([key, value]) => {
            if (isNaN(Number(key))) {
              const option = document.createElement('option');
              option.value = key;
              option.textContent = value;
              subcategorySelect.appendChild(option);
            }
          });
          subcategoryContainer.classList.remove('hidden');
        } else {
          subcategoryContainer.classList.add('hidden');
        }
      });
    });
  </script>
</body>
</html>
