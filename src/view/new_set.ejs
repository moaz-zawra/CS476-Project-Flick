<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flick | New Set</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>


<body class="p-4 bg-amber-200">

<%- include('partials/header') %>
<div class="border-2 border-black bg-sky-100 rounded-xl w-80 p-4 text-center mx-auto mt-10">
    <!-- DO NOT CHANGE THE name ATTRIBUTE OF THE INPUT FIELDS PLEASE -->
    <form action="/api/v2/create-set" method="post">
        <label for="setName" id="setName_label" class="text-black font-bold">Set Name</label><br />
        <input type="text" id="setName" name="setName"
               class="border-2 rounded-lg p-0.5 border-gray-600 bg-sky-100 focus:border-black focus:outline focus:outline-black" required />
        <br /><br />

        <label for="setDesc" id="setDesc_label" class="text-black font-bold">Set Description</label><br />
        <input type="text" id="setDesc" name="setDesc"
               class="border-2 rounded-lg p-0.5 border-gray-600 bg-sky-100 focus:border-black focus:outline focus:outline-black" required />
        <br /><br />

        <label for="category" class="text-black font-bold">Category</label><br />
        <select id="category" name="category" class="border-2 rounded-lg p-0.5 border-gray-600 bg-sky-100 focus:border-black focus:outline focus:outline-black" required>
            <option value="" disabled selected>Select a category</option>
            <% Object.entries(categories).forEach(([key, value]) => { %>
                <% if (!isNaN(Number(key))) { %>
                    <option value="<%= key %>"><%= categoryNames[key] %></option>
                <% } %>
            <% }); %>
        </select>
        <br /><br />

        <div id="subcategory-container" class="hidden">
            <label for="subcategory" class="text-black font-bold">Subcategory</label><br />
            <select id="subcategory" name="subcategory" class="border-2 rounded-lg p-0.5 border-gray-600 bg-sky-100 focus:border-black focus:outline focus:outline-black">
                <option value="" disabled selected>Select a subcategory</option>
            </select>
            <br /><br />
        </div>

        <input class="border-2 rounded-xl w-40 p-0.5 bg-green-300 dark:bg-secondary-dark text-accent-light dark:text-accent-dark font-bold hover:bg-green-400 dark:hover:bg-secondary-light border-accent-light dark:border-accent-dark"
               type="submit" value="Create Set">
        <br /><br /><br />

        <button class="border-2 rounded-xl w-60 p-0.5 bg-amber-200 text-black font-bold hover:bg-amber-300"
                onclick="window.location.href='/'">Go back to dashboard</button>
    </form>

</div>

<script>
// Convert the server-side enums to JavaScript objects
const subcategories = <%- JSON.stringify(subcategories) %>;
const categoryNames = <%- JSON.stringify(categoryNames) %>;

document.getElementById('category').addEventListener('change', function() {
    const subcategoryContainer = document.getElementById('subcategory-container');
    const subcategorySelect = document.getElementById('subcategory');
    const selectedCategory = this.value;

    // Clear existing options
    subcategorySelect.innerHTML = '<option value="" disabled selected>Select a subcategory</option>';

    if (selectedCategory && subcategories[selectedCategory]) {
        // Add new options from the enum
        const subCategoryEnum = subcategories[selectedCategory];
        Object.entries(subCategoryEnum).forEach(([key, value]) => {
            // Skip numeric keys (enum creates both number->string and string->number mappings)
            if (isNaN(Number(key))) {
                const option = document.createElement('option');
                option.value = key;
                option.textContent = value;
                subcategorySelect.appendChild(option);
            }
        });
        subcategoryContainer.classList.remove('hidden');
    } else {
        subcategoryContainer.classList.add('hidden');
    }
});
</script>

</body>

</html>