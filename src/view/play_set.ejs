<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Flick | Public Sets</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="/js/color-scheme.js"></script>
    <script src="/js/categories.js"></script>
    <script src="/js/status-handler.js"></script>
    <script>
        tailwind.config = window.tailwindConfig;
    </script>
    <style>
        .card {
            transform-style: preserve-3d;
            transition: transform 0.6s;
        }

        .card.flipped {
            transform: rotateY(180deg);
        }

        .card .front,
        .card .back {
            backface-visibility: hidden;
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }

        .card .back {
            transform: rotateY(180deg);
        }

        .nav-arrow {
            position: fixed;
            top: 50%;
            transform: translateY(-50%);
        }

        .nav-arrow.prev {
            left: 20px;
        }

        .nav-arrow.next {
            right: 20px;
        }
    </style>
</head>
<body class="p-4 bg-bg-light dark:bg-bg-dark min-h-screen">
<%- include('partials/header') %>
<%- include('partials/status-message') %>

<main>
    <div class="border-2 border-accent-light dark:border-accent-dark bg-surface-light dark:bg-surface-dark rounded-xl w-full max-w-4xl p-6 mx-auto mt-10 shadow-custom transition-all duration-300 hover:shadow-lg">
        
        <div class="mb-6">
            <h2 class="text-2xl font-bold text-accent-light dark:text-accent-dark mb-4 border-b-2 border-accent-light dark:border-accent-dark pb-2">Set Info</h2>
            
            <div class="bg-white dark:bg-gray-800 p-4 rounded-lg border border-gray-300 dark:border-gray-700">
                <h3 class="font-mono text-2xl font-bold text-accent-light dark:text-accent-dark mb-2 text-left"><%= set.setName %></h3>
                
                <p class="text-text-light dark:text-text-dark mt-1 mb-3 text-left">
                    <%= set.description || "No description available" %>
                </p>
                
                <div class="flex flex-wrap gap-2 mt-2">
                    <% if (set.category) { %>
                        <span class="bg-primary-light dark:bg-primary-dark text-text-light dark:text-text-dark px-2 py-1 rounded-md text-sm">
                            Category: <span id="category-display"></span>
                        </span>
                    <% } %>
                    
                    <% if (set.subCategory) { %>
                        <span class="bg-secondary-light dark:bg-secondary-dark text-text-light dark:text-text-dark px-2 py-1 rounded-md text-sm">
                            Subcategory: <span id="subcategory-display"><%= set.subCategory %></span>
                        </span>
                    <% } %>
                    
                    <span class="bg-highlight-light dark:bg-highlight-dark text-text-light dark:text-text-dark px-2 py-1 rounded-md text-sm">
                        Views: <span><%= set.views || 0 %></span>
                    </span>
                    
                    <% if (set.ownerID) { %>
                        <span class="bg-contrast-light dark:bg-contrast-dark text-text-light dark:text-text-dark px-2 py-1 rounded-md text-sm">
                            Created by: <%= set.ownerID.username || set.ownerID.email || "Anonymous" %>
                        </span>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Cards Display Section -->
        <div class="mt-8 relative min-h-[16rem]">
            <% if (typeof cards !== 'undefined' && cards && cards.length > 0) { %>
                <div id="prev-arrow" class="nav-arrow prev bg-gray-200 dark:bg-white bg-opacity-20 dark:bg-opacity-20 hover:bg-opacity-40 dark:hover:bg-opacity-40 p-5 rounded-full flex items-center justify-center cursor-pointer transition-all duration-300 opacity-0 pointer-events-none">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-800 dark:text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                    </svg>
                </div>
                
                <div id="next-arrow" class="nav-arrow next bg-gray-200 dark:bg-white bg-opacity-20 dark:bg-opacity-20 hover:bg-opacity-40 dark:hover:bg-opacity-40 p-5 rounded-full flex items-center justify-center cursor-pointer transition-all duration-300">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-800 dark:text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                </div>
                
                <!-- Cards Container -->
                <div id="cards-container" class="flex justify-center">
                    <% cards.forEach(function(card, index) { %>
                        <div class="w-64 h-32 perspective-1000 card-slide <%= index === 0 ? '' : 'hidden' %>" data-index="<%= index %>">
                            <div class="relative w-full h-full card cursor-pointer" id="card-<%= index %>">
                                <!-- Front of Card -->
                                <div class="front bg-yellow-200 dark:bg-purple-900 text-black dark:text-white rounded-lg p-4 overflow-y-auto flex flex-col">
                                    <div class="card-content overflow-y-auto word-break-all max-h-full p-1">
                                        <h3 class="text-text-light dark:text-text-dark font-mono font-semibold text-xl">
                                            <%= card.front_text %>
                                        </h3>
                                    </div>
                                </div>
                                
                                <!-- Back of Card -->
                                <div class="back bg-green-200 dark:bg-teal-900 text-black dark:text-white rounded-lg p-4 overflow-y-auto flex flex-col">
                                    <div class="card-content overflow-y-auto word-break-all max-h-full p-1">
                                        <h3 class="text-text-light dark:text-text-dark font-mono font-semibold text-lg">
                                            Answer:</h3>
                                        <p class="text-text-light dark:text-text-dark font-mono font-semibold text-lg mt-2">
                                            <%= card.back_text %>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
        <br />
        <!-- Progress Bar -->
        <div class="w-full bg-gray-200 rounded-full h-2.5 mb-6 dark:bg-gray-700">
            <div id="progress-bar" class="bg-accent-light dark:bg-accent-dark h-2.5 rounded-full transition-all duration-300" style="width: 0%"></div>
        </div>
        
        <!-- Card Counter -->
        <div class="text-center mb-4">
            <span id="card-counter" class="text-text-light dark:text-text-dark font-medium"></span>
        </div>

                <!-- End Session Options -->
                <div id="end-session-options" class="hidden text-center py-8">
                    <h3 class="text-2xl font-bold text-accent-light dark:text-accent-dark mb-4">Practice Session Complete!</h3>
                    <div class="flex justify-center gap-4 mt-6">
                        <button id="retry-button" class="border-2 rounded-xl px-8 py-3 bg-primary-light dark:bg-primary-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200 transform hover:scale-105">
                            Retry
                        </button>
                        <button id="end-session-button" class="border-2 rounded-xl px-8 py-3 bg-contrast-light dark:bg-contrast-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200 transform hover:scale-105">
                            End Practice Session
                        </button>
                    </div>
                </div>
            <% } else { %>
                <div class="text-center py-10">
                    <p class="text-xl font-semibold text-accent-light dark:text-accent-dark">No Cards in this Set</p>
                    <p class="text-text-light dark:text-text-dark mt-2">This flashcard set doesn't contain any cards yet.</p>
                    <button onclick="window.location.href='/'" class="mt-6 border-2 rounded-xl px-8 py-3 bg-contrast-light dark:bg-contrast-dark text-text-light dark:text-text-dark font-bold hover:bg-highlight-light dark:hover:bg-highlight-dark transition-all duration-200 transform hover:scale-105">
                        Return Home
                    </button>
                </div>
            <% } %>
        </div>
    </div>
</main>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Setup category display
        const categoryNames = <%- JSON.stringify(categoryNames || {}) %>;
        const category_display = document.getElementById('category-display');
        const category = <%- JSON.stringify(set?.category || '') %>;
        
        if (category_display && category) {
            category_display.innerText = getCategoryName(category, categoryNames);
        }

        // Card navigation setup
        const cards = <%- JSON.stringify(cards || []) %>;
        const totalCards = cards.length;
        if (totalCards === 0) return;

        let currentCardIndex = 0;
        const cardSlides = document.querySelectorAll('.card-slide');
        const cardCounter = document.getElementById('card-counter');
        const progressBar = document.getElementById('progress-bar');
        const prevArrow = document.getElementById('prev-arrow');
        const nextArrow = document.getElementById('next-arrow');
        const endSessionOptions = document.getElementById('end-session-options');
        
        // Update counter and progress bar
        function updateProgress() {
            cardCounter.textContent = `Card ${currentCardIndex + 1} of ${totalCards}`;
            const progressPercentage = ((currentCardIndex + 1) / totalCards) * 100;
            progressBar.style.width = `${progressPercentage}%`;

            // Handle navigation arrow visibility
            prevArrow.classList.toggle('opacity-0', currentCardIndex === 0);
            prevArrow.classList.toggle('pointer-events-none', currentCardIndex === 0);
            
            // Check if we've reached the end
            if (currentCardIndex === totalCards - 1) {
                nextArrow.classList.add('opacity-0', 'pointer-events-none');
                setTimeout(() => {
                    endSessionOptions.classList.remove('hidden');
                }, 500);
            } else {
                nextArrow.classList.remove('opacity-0', 'pointer-events-none');
                endSessionOptions.classList.add('hidden');
            }
        }

        // Show a specific card
        function showCard(index) {
            cardSlides.forEach((slide, i) => {
                if (i === index) {
                    slide.classList.remove('hidden');
                } else {
                    slide.classList.add('hidden');
                }
            });
            updateProgress();
        }

        // Initialize
        updateProgress();

        // Setup click events for cards (flip functionality)
        cardSlides.forEach(slide => {
            const card = slide.querySelector('.card');
            if (card) {
                card.addEventListener('click', function() {
                    this.classList.toggle('flipped');
                });
            }
        });

        // Navigation arrow click events
        prevArrow.addEventListener('click', function() {
            if (currentCardIndex > 0) {
                currentCardIndex--;
                showCard(currentCardIndex);
            }
        });

        nextArrow.addEventListener('click', function() {
            if (currentCardIndex < totalCards - 1) {
                currentCardIndex++;
                showCard(currentCardIndex);
            }
        });

        // End session buttons
        document.getElementById('retry-button').addEventListener('click', function() {
            currentCardIndex = 0;
            showCard(currentCardIndex);
            endSessionOptions.classList.add('hidden');
        });

        document.getElementById('end-session-button').addEventListener('click', function() {
            window.location.href = '/';
        });

        // Key navigation
        document.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowLeft') {
                prevArrow.click();
            } else if (e.key === 'ArrowRight') {
                nextArrow.click();
            } else if (e.key === ' ' || e.key === 'Spacebar') {
                // Flip the current card
                const currentCard = document.querySelector(`.card-slide[data-index="${currentCardIndex}"] .card`);
                if (currentCard) {
                    currentCard.classList.toggle('flipped');
                }
                e.preventDefault();
            }
        });
    });
</script>

</body>
</html>
